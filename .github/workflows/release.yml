name: Build Release

on:
  push:
    tags:
      - 'v*'
      - 'beta*'
      - 'rc*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            asset_name: ft_place_bot-linux
          - os: windows-latest
            asset_name: ft_place_bot.exe
          - os: macos-latest
            asset_name: ft_place_bot-macos

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Add Poetry to PATH
      run: |
        echo "${{ runner.tool_cache }}/poetry/bin" >> $GITHUB_PATH
        echo "${{ runner.tool_cache }}/poetry/bin" >> $PATH

    - name: Install dependencies
      run: poetry install --with dev

    - name: Build binary
      run: |
        if [ ${{ matrix.os }} == 'ubuntu-latest' ]; then
          poetry run python scripts/build.py --name ft_place_bot-linux
        elif [ ${{ matrix.os }} == 'windows-latest' ]; then
          poetry run python scripts/build.py --name ft_place_bot.exe
        elif [ ${{ matrix.os }} == 'macos-latest' ]; then
          poetry run python scripts/build.py --name ft_place_bot-macos
        fi

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.asset_name }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
